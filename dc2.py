#coding:utf-8
import pandas as pd


#取早餐数据
dfzc = pd.read_excel('zc.xlsx')
# print(df.columns)
dfzc = dfzc.loc[:, [
    'Q1_请选择填表日期_日期',
    'Q2_请填写即将预定的周数（注意填写的是预定的周数不是当前周数！务必准确填写！6月15日-6月21日为第16周，以此类推。填写数字，如第16周填写“16”，第17周填写“17”。）',
    'Q3_请选择年级', 'Q4_请选择班级', 'Q5_请填写姓名', 'Q6_请选择周一早餐编号（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q7_请选择周二早餐编号（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q8_请选择周三早餐编号（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q9_请选择周四早餐编号（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q10_请选择周五早餐编号（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q11_请选择周六早餐编号（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q12_请选择周日早餐编号（当日不需要订餐请选择0，套餐内容详见菜价表）'
]]

dfzc.columns = [
    '填表日期', '周数', '年级', '班级', '姓名学号', '周一早餐', '周二早餐', '周三早餐', '周四早餐', '周五早餐',
    '周六早餐', '周日早餐'
]  #按班分类
# print(dfzc.columns)

#读取午餐数据
dfwc = pd.read_excel('wc.xlsx')
# print(df.columns)
dfwc = dfwc.loc[:, [
    'Q1_请选择填表日期_日期',
    'Q2_请填写即将预定的周数（注意填写的是预定的周数不是当前周数！务必准确填写！6月15日-6月21日为第16周，以此类推。填写数字，如第16周填写“16”，第17周填写“17”。）',
    'Q3_请选择年级', 'Q4_请选择班级', 'Q5_请填写姓名', 'Q6_请选择周一午餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q7_请选择周二午餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q8_请选择周三午餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q9_请选择周四午餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q10_请选择周五午餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q11_请选择周六午餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q12_请选择周日午餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）'
]]

dfwc.columns = [
    '填表日期', '周数', '年级', '班级', '姓名学号', '周一午餐', '周二午餐', '周三午餐', '周四午餐', '周五午餐',
    '周六午餐', '周日午餐'
]
# print(dfwc.columns)

#读取晚餐数据
dfdc = pd.read_excel('dc.xlsx')
# print(df.columns)
dfdc = dfdc.loc[:, [
    'Q1_请选择填表日期_日期',
    'Q2_请填写即将预定的周数（注意填写的是预定的周数不是当前周数！务必准确填写！6月15日-6月21日为第16周，以此类推。填写数字，如第16周填写“16”，第17周填写“17”。）',
    'Q3_请选择年级', 'Q4_请选择班级', 'Q5_请填写姓名或学号', 'Q6_请选择周一晚餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q7_请选择周二晚餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q8_请选择周三晚餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q9_请选择周四晚餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q10_请选择周五晚餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q11_请选择周六晚餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）',
    'Q12_请选择周日晚餐种类（当日不需要订餐请选择0，套餐内容详见菜价表）'
]]

dfdc.columns = [
    '填表日期', '周数', '年级', '班级', '姓名学号', '周一晚餐', '周二晚餐', '周三晚餐', '周四晚餐', '周五晚餐',
    '周六晚餐', '周日晚餐'
]  #按班分类
# print(dfdc.columns)

#筛选
gr = ['初一级', '初二级', '初三级', '高一级', '高二级', '高三级']
cl = [
    '1班', '2班', '3班', '4班', '5班', '6班', '7班', '8班', '9班', '10班', '11班', '12班',
    '13班', '14班', '15班', '16班', '17班', '18班', '19班'
]


for i in gr:
    for j in cl:
        dfzc1 = dfzc.loc[dfzc['年级'] == i]
        dfzc2 = dfzc1.loc[dfzc1['班级'] == j]
        dfwc1 = dfwc.loc[dfwc['年级'] == i]
        dfwc2 = dfwc1.loc[dfwc1['班级'] == j]
        dfdc1 = dfdc.loc[dfdc['年级'] == i]
        dfdc2 = dfdc1.loc[dfdc1['班级'] == j]
        # print(i + j)
        end1 = pd.merge(dfzc2, dfwc2, on='姓名学号', how='outer')
        # end1['姓名学号']=end1['姓名学号'].apply(str)
        # print(end1)
        # print(dfdc2)
        end2 = pd.merge(end1, dfdc2, on='姓名学号', how='outer')
        end2 = end2.loc[:, [
            '周数', '年级', '班级', '姓名学号', '周一早餐', '周二早餐', '周三早餐', '周四早餐', '周五早餐',
            '周六早餐', '周日早餐', '周一午餐', '周二午餐', '周三午餐', '周四午餐', '周五午餐', '周六午餐',
            '周日午餐', '周一晚餐', '周二晚餐', '周三晚餐', '周四晚餐', '周五晚餐', '周六晚餐', '周日晚餐'
        ]]
        #####新添加去重和补充年级班级
        end2.drop_duplicates(subset=['姓名学号'], keep='last', inplace=True)
        end2['年级']=i
        end2['班级']=j
        # print(end2.shape[0])
        k=end2.shape[0]
        if k!=0:
            print(i+j+'当前订餐人数：'+str(k))